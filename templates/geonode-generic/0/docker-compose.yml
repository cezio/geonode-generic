version: '2'
services:
  db:
    image: geosolutionsit/postgis-docker:9.6
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: db
      org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    environment:
      GEONODE_DATABASE: geonode
      GEONODE_DATABASE_PASSWORD: geonode
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_PASSWORD: geonode_data
#    env_file:
#      - ../../../scripts/docker/env/production/db.env

  django:
    restart: unless-stopped
    image: geosolutionsit/geonode-generic:master
#    build: ../../../. 
    # image: geonode/geonode:latest
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    depends_on:
      - db
    command: uwsgi --ini /usr/src/app/uwsgi.ini
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - statics:/mnt/volumes/statics

    #env_file:
    #  - ../../../scripts/docker/env/production/django.env

    environment:
       GEONODE_INSTANCE_NAME: geonode
       GEONODE_LB_HOST_IP: 
       GEONODE_LB_PORT: 
       DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
       DEFAULT_BACKEND_DATASTORE: datastore
       GEONODE_DATABASE: geonode
       GEONODE_DATABASE_PASSWORD: geonode
       GEONODE_GEODATABASE: geonode_data
       GEONODE_GEODATABASE_PASSWORD: geonode_data
       BROKER_URL: amqp://guest:guest@rabbitmq:5672/
       DJANGO_SETTINGS_MODULE: geonode_generic.settings
       ALLOWED_HOSTS: ['django', 'geoserver', 'geonode']
       DOCKER_ENV: production
       UWSGI_CMD: uwsgi --ini /usr/src/app/uwsgi.ini
       IS_CELERY: False
       C_FORCE_ROOT: 1
       GEOSERVER_PUBLIC_LOCATION: ${SITEURL}/geoserver/
       GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
       SITEURL: http://goenode/
       STATIC_ROOT: /mnt/volumes/statics/static/
       MEDIA_ROOT: /mnt/volumes/statics/uploaded/
       ALLOWED_HOSTS: ${ALLOWED_HOSTS}
       ADMIN_EMAILS: ${ADMIN_EMAILS}
       SITEURL: ${SITEURL}
      

  geoserver:
    image: geosolutionsit/geoserver-docker:2.12.x
    restart: unless-stopped
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - geoserver-data-dir:/geoserver_data/data
    environment:
        DOCKERHOST: 
        GEONODE_LB_HOST_IP: 
        GEONODE_LB_PORT: 
        PUBLIC_PORT: 80
        DOCKER_HOST_IP: 
#    env_file:
#      - ../../../scripts/docker/env/production/django.env

  geonode:
    image: geosolutionsit/nginx-geonode:latest
    restart: unless-stopped
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - geoserver
    ports:
      - "${EXPOSED_HTTP_PORT}:80"
    volumes:
      - statics:/mnt/volumes/statics


  data-dir-conf:
    image: geosolutionsit/geoserver_data:2.12.x
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

volumes:

  geoserver-data-dir:
#    name: ${COMPOSE_PROJECT_NAME}-gsdatadir
  dbdata:
#    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbbackups:
#    name: ${COMPOSE_PROJECT_NAME}-dbbackups
  statics:
#    name: ${COMPOSE_PROJECT_NAME}-statics
